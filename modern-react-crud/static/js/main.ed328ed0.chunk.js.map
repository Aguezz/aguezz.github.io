{"version":3,"sources":["context/Article.context.jsx","components/ArticleList.component.jsx","pages/IndexPage.jsx","pages/DetailPage.jsx","libs/nl2br.jsx","pages/AddPage.jsx","pages/EditPage.jsx","pages/AboutPage.jsx","components/AppBar.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ArticleContext","React","createContext","Provider","ArticleProvider","Consumer","children","useState","id","title","body","articles","setArticles","providerValue","addArticle","data","uuidv4","editArticle","index","map","article","indexOf","_articles","deleteArticle","filter","value","styles","card","css","DeleteDialog","open","handleClose","handleDeleteArticle","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","ArticleList","activeId","useContext","anchorEl","setAnchorEl","setOpen","activeArticle","setActiveArticle","history","useHistory","push","handleActionClose","key","Fragment","Card","CardHeader","action","Tooltip","IconButton","Add","CardContent","List","dense","length","ListItem","button","selected","ListItemText","primary","secondary","secondaryTypographyProps","noWrap","ListItemSecondaryAction","edge","e","currentTarget","handleAnchorEl","aria-controls","aria-haspopup","MoreVert","Menu","MenuItem","IndexPage","Grid","container","spacing","item","md","sm","xs","paper","DetailPage","props","match","params","Paper","Typography","variant","component","split","textField","colors","blue","AddPage","setTitle","setBody","errors","setErrors","Close","onSubmit","preventDefault","_errors","Object","keys","TextField","name","label","onChange","target","margin","fullWidth","error","helperText","autoComplete","multiline","rows","type","EditPage","setId","successMessage","setSuccessMessage","closeSuccessMessage","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","aria-label","href","rel","background","list","AppBarComponent","AppBar","position","Container","Toolbar","Drawer","role","ListItemIcon","Info","App","style","marginTop","path","exact","AboutPage","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ed328ed0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport uuidv4 from 'uuid/v4'\n\nconst ArticleContext = React.createContext()\nconst { Provider, Consumer: ArticleConsumer } = ArticleContext\n\n\nconst ArticleProvider = ({ children }) => {\n    const initialState = [\n        { id: '1', title: 'Fire in California', body: 'On Monday, a fire starts in California. The fire spreads very quickly because of high winds.\\n It burns more than 3,300 acres of land. It does not burn any buildings. However, the danger gets bigger. Firefighters try to control the fire. It is very difficult. They are not successful.\\n\\n Officials closely watch the situation. They want to declare a state of emergency. The situation gets very bad. Officials plan to take local people to a safer place.\\n\\n Difficult words: spread (to move over a large area), declare (to say something officially), local (something or someone that belongs to a specific area).\\n\\n You can watch the original video in the Level 3 section.' },\n        { id: '2', title: 'Spongebob on Netflix', body: 'There is a very successful TV show for children. It is called Spongebob Squarepants. It is on TV for more than 20 years. People still like it today.\\n Netflix is an American media company. It wants to do big business with another TV company. Netflix wants to make new parts of Spongebob Squarepants. It wants to be better than Disney Plus. Disney Plus is a new company with programs for children.\\n\\n Bill Fagerbakke is an actor. He gives his voice to one of the characters in the show. He remembers the start of the show. He does not like the show very much. He changes his opinion quickly. Now he is happy that children can watch it again.' }\n    ]\n\n    const [articles, setArticles] = useState(initialState)\n\n    const addArticle = data => {\n        data.id = uuidv4()\n        setArticles([data, ...articles])\n    }\n\n    const editArticle = (id, { title, body }) => {\n        const index = articles.map(article => article.id).indexOf(id)\n\n        if (index > -1) {\n            const _articles = [...articles]\n            _articles[index] = { id, title, body }\n            setArticles(_articles)\n        }\n    }\n\n    const deleteArticle = id => {\n        const _articles = articles.filter(article => article.id !== id)\n        setArticles(_articles)\n    }\n\n    const providerValue = {\n        articles,\n        addArticle,\n        editArticle,\n        deleteArticle\n    }\n\n    return (\n        <Provider value={providerValue}>\n            {children}\n        </Provider>\n    )\n}\n\nexport {\n    ArticleProvider,\n    ArticleConsumer\n}\n\nexport default ArticleContext\n","import React, { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ArticleContext from '../context/Article.context'\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardContent,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Menu,\n    MenuItem,\n    Tooltip\n} from '@material-ui/core'\nimport {\n    Add as AddIcon,\n    MoreVert as MoreVertIcon\n} from '@material-ui/icons'\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\n\nconst styles = {\n    card: css`\n        display: block;\n        width: 100%;`\n}\n\nconst DeleteDialog = ({ open, handleClose, handleDeleteArticle }) => (\n    <Dialog\n        open={open}\n        onClose={handleClose}>\n        <DialogTitle>\n            Delete Alert\n        </DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Are you sure want to delete this article?\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n                Disagree\n            </Button>\n            <Button color=\"secondary\" onClick={handleDeleteArticle}>\n                Agree\n            </Button>\n        </DialogActions>\n    </Dialog>\n)\n\nconst ArticleList = ({ activeId }) => {\n    const { articles, deleteArticle } = useContext(ArticleContext)\n\n    const [anchorEl, setAnchorEl] = React.useState({}) // For show menu in right side of article list\n    const [open, setOpen] = useState(false)\n    const [activeArticle, setActiveArticle] = useState('')\n\n    const history = useHistory()\n\n    const handleDeleteArticle = id => {\n        if (id) {\n            setOpen(true)\n            setActiveArticle(id)\n        } else {\n            deleteArticle(activeArticle)\n            setActiveArticle('')\n            setOpen(false)\n            history.push('/')\n        }\n    }\n\n    const handleAnchorEl = (key, e) => setAnchorEl({ ...anchorEl, [key]: e.currentTarget })\n\n    const handleActionClose = (key) => setAnchorEl({ ...anchorEl, [key]: null })\n\n    return (\n        <React.Fragment>\n            <DeleteDialog\n                open={open}\n                handleClose={() => setOpen(false)}\n                handleDeleteArticle={() => handleDeleteArticle(null)} />\n\n            <Card css={styles.card}>\n                <CardHeader\n                    title=\"Articles\"\n                    action={\n                        <Tooltip title=\"Add new article\">\n                            <IconButton onClick={() => history.push('/add')}>\n                                <AddIcon />\n                            </IconButton>\n                        </Tooltip>\n                    }\n                />\n                <CardContent>\n                    <List dense>\n                        {articles.length ?\n                            articles.map((article, key) => (\n                                <ListItem\n                                    key={key}\n                                    button\n                                    selected={activeId === article.id}\n                                    onClick={() => history.push(`/${article.id}`)}>\n                                    <ListItemText\n                                        primary={article.title}\n                                        secondary={article.body}\n                                        secondaryTypographyProps={{ noWrap: true }} />\n                                    <ListItemSecondaryAction>\n                                        <Tooltip title=\"Show options\">\n                                            <IconButton\n                                                edge=\"end\"\n                                                onClick={e => handleAnchorEl(key, e)}\n                                                aria-controls={`menu-${key}`}\n                                                aria-haspopup=\"true\">\n                                                <MoreVertIcon />\n                                            </IconButton>\n                                        </Tooltip>\n\n                                        <Menu\n                                            id={`menu-${key}`}\n                                            anchorEl={anchorEl[key]}\n                                            open={!!anchorEl[key]}\n                                            onClose={() => handleActionClose(key)}>\n                                            <MenuItem onClick={() => { handleActionClose(key); history.push(`/${article.id}/edit`) }}>\n                                                Edit\n                                            </MenuItem>\n                                            <MenuItem onClick={() => { handleDeleteArticle(article.id); handleActionClose(key) }}>\n                                                Delete\n                                            </MenuItem>\n                                        </Menu>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )) :\n                            (<p>No data found</p>)\n                        }\n                    </List>\n                </CardContent>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nexport default ArticleList\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport ArticleList from '../components/ArticleList.component.jsx'\n\nconst IndexPage = () => {\n    return (\n        <Grid container spacing={3} >\n            <Grid item md={6} sm={12} xs={12}>\n                <ArticleList />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default IndexPage\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n    Grid,\n    Paper,\n    Typography,\n    Button\n} from '@material-ui/core'\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport ArticleContext from '../context/Article.context'\nimport ArticleList from '../components/ArticleList.component.jsx'\nimport nl2br from '../libs/nl2br.jsx'\n\nconst styles = {\n    paper: css`\n        padding: 2rem;`,\n\n    body: css`\n        color: #7f8c8d;`\n}\n\nconst DetailPage = (props) => {\n    const activeId = props.match.params.id\n    const history = useHistory()\n\n    const { articles } = useContext(ArticleContext)\n\n    const article = articles.filter(article => article.id === activeId)[0]\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item md={6} sm={12} xs={12}>\n                <ArticleList activeId={activeId} />\n            </Grid>\n            <Grid item md={6} sm={12} xs={12}>\n                <Paper css={styles.paper}>\n                    {article ?\n                        <React.Fragment>\n                            <Typography variant=\"h5\" component=\"h3\">\n                                {article.title}\n                            </Typography>\n                            <br />\n                            <Typography component=\"p\" css={styles.body}>\n                                {nl2br(article.body)}\n                            </Typography>\n                        </React.Fragment> :\n                        <p>Article not found</p>\n                    }\n\n                    <br />\n\n                    <Button color=\"secondary\" onClick={() => history.push('/')}>Close</Button>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default DetailPage\n","import React from 'react'\n\nexport default string => string.split('\\n').map((item, key) => <React.Fragment key={key}>{item}<br /></React.Fragment>)\n","import { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport ArticleContext from '../context/Article.context.jsx'\nimport ArticleList from '../components/ArticleList.component.jsx'\n\nimport {\n    Grid,\n    Card,\n    CardHeader,\n    CardContent,\n    IconButton,\n    TextField,\n    Button,\n    Tooltip,\n    colors\n} from '@material-ui/core'\nimport { Close as CloseIcon } from '@material-ui/icons'\n\nconst styles = {\n    textField: css`\n        margin-bottom: 12px !important;`,\n\n    button: css`\n        background-color: ${colors.blue['A700']} !important;\n        color: #eee !important;`,\n}\n\nconst AddPage = () => {\n    const history = useHistory()\n    const { addArticle } = useContext(ArticleContext)\n\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [errors, setErrors] = useState({})\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setErrors({})\n\n        const _errors = {}\n        if (!title) _errors.title = \"Can't be blank\"\n        if (!body) _errors.body = \"Can't be blank\"\n\n        if (Object.keys(_errors).length) return setErrors(_errors)\n\n        addArticle({ title, body })\n\n        setTitle('')\n        setBody('')\n    }\n\n    return (\n        <Grid container spacing={3} >\n            <Grid item md={6} sm={12} xs={12}>\n                <ArticleList />\n            </Grid>\n            <Grid item md={6} sm={12} xs={12}>\n                <Card>\n                    <CardHeader\n                        title=\"Add Article\"\n                        action={\n                            <Tooltip title=\"Close\">\n                                <IconButton onClick={() => history.push('/')}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </Tooltip>\n                        } />\n\n                    <CardContent>\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                name=\"title\"\n                                label=\"Title *\"\n                                variant=\"outlined\"\n                                value={title}\n                                onChange={e => setTitle(e.target.value)}\n                                css={styles.textField}\n                                margin=\"dense\"\n                                fullWidth\n                                error={!!errors.title}\n                                helperText={errors.title}\n                                autoComplete=\"off\" />\n\n                            <TextField\n                                name=\"body\"\n                                label=\"Body *\"\n                                variant=\"outlined\"\n                                value={body}\n                                onChange={e => setBody(e.target.value)}\n                                css={styles.textField}\n                                margin=\"dense\"\n                                fullWidth\n                                error={!!errors.body}\n                                helperText={errors.body}\n                                multiline\n                                rows={10} />\n\n                            <Button\n                                type=\"submit\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                css={styles.button}>\n                                SAVE\n                            </Button>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AddPage\n","import { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport ArticleContext from '../context/Article.context.jsx'\nimport ArticleList from '../components/ArticleList.component.jsx'\n\nimport {\n    Grid,\n    Card,\n    CardHeader,\n    CardContent,\n    IconButton,\n    TextField,\n    Button,\n    Tooltip,\n    Snackbar,\n    colors\n} from '@material-ui/core'\nimport { Close as CloseIcon } from '@material-ui/icons'\n\nconst styles = {\n    textField: css`\n        margin-bottom: 12px !important;`,\n\n    button: css`\n        background-color: ${colors.blue['A700']} !important;\n        color: #eee !important;`,\n}\n\nconst EditPage = (props) => {\n    const history = useHistory()\n    const { articles, editArticle } = useContext(ArticleContext)\n\n    const activeId = props.match.params.id\n    const article = articles.filter(article => article.id === activeId)[0]\n\n    const [id, setId] = useState('') // handling component don't want to refetch\n    const [title, setTitle] = useState(article ? article.title : '')\n    const [body, setBody] = useState(article ? article.body : '')\n    const [errors, setErrors] = useState({})\n    const [successMessage, setSuccessMessage] = useState(false)\n\n    if (id !== activeId) {\n        setId(activeId)\n        setTitle(article ? article.title : '')\n        setBody(article ? article.body : '')\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setErrors({})\n\n        const _errors = {}\n        if (!title) _errors.title = \"Can't be blank\"\n        if (!body) _errors.body = \"Can't be blank\"\n\n        if (Object.keys(_errors).length) return setErrors(_errors)\n\n        editArticle(activeId, { title, body })\n        setSuccessMessage(true)\n    }\n\n    const closeSuccessMessage = (event, reason) => {\n        if (reason === 'clickaway') return\n\n        setSuccessMessage(false);\n    }\n\n    return (\n        <Grid container spacing={3} >\n            <Grid item md={6} sm={12} xs={12}>\n                <ArticleList activeId={activeId} />\n            </Grid>\n            <Grid item md={6} sm={12} xs={12}>\n                <Card>\n                    <CardHeader\n                        title=\"Edit Article\"\n                        action={\n                            <Tooltip title=\"Close\">\n                                <IconButton onClick={() => history.push('/')}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </Tooltip>\n                        } />\n\n                    <CardContent>\n                        {article ?\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    name=\"title\"\n                                    label=\"Title *\"\n                                    variant=\"outlined\"\n                                    value={title}\n                                    onChange={e => setTitle(e.target.value)}\n                                    css={styles.textField}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    error={!!errors.title}\n                                    helperText={errors.title}\n                                    autoComplete=\"off\" />\n\n                                <TextField\n                                    name=\"body\"\n                                    label=\"Body *\"\n                                    variant=\"outlined\"\n                                    value={body}\n                                    onChange={e => setBody(e.target.value)}\n                                    css={styles.textField}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    error={!!errors.body}\n                                    helperText={errors.body}\n                                    multiline\n                                    rows={10} />\n\n                                <Button\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    css={styles.button}>\n                                    SAVE\n                                </Button>\n                            </form> :\n                            <p>Article not found</p>\n                        }\n                    </CardContent>\n                </Card>\n            </Grid>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={successMessage}\n                autoHideDuration={5000}\n                onClose={closeSuccessMessage}\n                message={<span>Data successfully updated</span>}\n                action={\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={closeSuccessMessage}>\n                        <CloseIcon />\n                    </IconButton>\n                }\n            />\n        </Grid>\n    )\n}\n\nexport default EditPage\n","import { Grid, Paper, Typography } from '@material-ui/core'\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\n\nconst styles = {\n    paper: css`\n        padding: 2rem;`\n}\n\nconst IndexPage = () => {\n    return (\n        <Grid container spacing={3} >\n            <Grid item md={6} sm={12} xs={12}>\n                <Paper css={styles.paper}>\n                    <Typography variant=\"h5\">\n                        About Us\n                    </Typography>\n\n                    <br />\n\n                    <Typography>\n                        This is a simple management blog article created using <code>react-hooks</code> and <code>react-context</code> for state management. Without <code>React.Component</code>, <code>redux</code>, or <code>mobx</code>\n                    </Typography>\n\n                    <br />\n                    <br />\n\n                    <Typography>\n                        Download this repository project here :\n                    </Typography>\n                    <a href=\"https://github.com/Aguezz/modern-react-crud/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        https://github.com/Aguezz/modern-react-crud/\n                    </a>\n                    <br />\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default IndexPage\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n    AppBar,\n    Drawer,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Container,\n    Toolbar,\n    Typography,\n    IconButton,\n    colors\n} from '@material-ui/core'\nimport {\n    Menu as MenuIcon,\n    List as ListIcon,\n    Info as InfoIcon\n} from '@material-ui/icons'\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\n\nconst styles = {\n    background: css`\n        background-color: ${colors.blue['A700']} !important;`,\n\n    title: css`\n        flex-grow: 1;`,\n\n    list: css`\n        width: 250px;`\n}\n\nconst AppBarComponent = () => {\n    const history = useHistory()\n    const [open, setOpen] = useState(false)\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\" css={styles.background}>\n                <Container>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={() => setOpen(true)}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" css={styles.title}>\n                            React Modern\n                    </Typography>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n\n            <Drawer open={open} onClose={() => setOpen(false)}>\n                <div role=\"presentation\" css={styles.list}>\n                    <List>\n                        <ListItem button onClick={() => { history.push('/'); setOpen(false) }}>\n                            <ListItemIcon>\n                                <ListIcon />\n                            </ListItemIcon>\n                            <ListItemText>\n                                Articles\n                            </ListItemText>\n                        </ListItem>\n                        <ListItem button onClick={() => { history.push('/about'); setOpen(false) }}>\n                            <ListItemIcon>\n                                <InfoIcon />\n                            </ListItemIcon>\n                            <ListItemText>\n                                About\n                            </ListItemText>\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        </React.Fragment>\n    )\n}\n\nexport default AppBarComponent\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\n\nimport IndexPage from './pages/IndexPage.jsx'\nimport DetailPage from './pages/DetailPage.jsx'\nimport AddPage from './pages/AddPage.jsx'\nimport EditPage from './pages/EditPage.jsx'\nimport AboutPage from './pages/AboutPage.jsx'\n\nimport AppBar from './components/AppBar.component.jsx'\nimport { ArticleProvider } from './context/Article.context.jsx'\n\nconst App = () => (\n  <ArticleProvider>\n    <AppBar />\n    <Container style={{ marginTop: '1.5rem' }}>\n      <Switch>\n        <Route path=\"/\" exact component={IndexPage} />\n        <Route path=\"/add\" exact component={AddPage} />\n        <Route path=\"/about\" exact component={AboutPage} />\n        <Route path=\"/:id\" exact component={DetailPage} />\n        <Route path=\"/:id/edit\" exact component={EditPage} />\n      </Switch>\n    </Container>\n  </ArticleProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { HashRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}